worker_processes 4;

error_log syslog:server=unix:/dev/log warn;
pid /var/snap/mastodon/current/nginx.pid;
daemon off;

events {
    worker_connections  1024;
}

http {
    access_log syslog:server=unix:/dev/log;

    include {{ .AppDir }}/nginx/etc/nginx/mime.types;
    # Set the `immutable` cache control options only for assets with a cache busting `v` argument
    map $arg_v $asset_immutable {
        "" "";
        default "immutable";
    }
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream backend {
        server unix:/var/snap/mastodon/current/backend.socket fail_timeout=0;
    }

    upstream streaming {
        server unix:/var/snap/mastodon/current/streaming.socket fail_timeout=0;
    }

    proxy_cache_path /var/snap/mastodon/current/nginx/cache levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

    client_body_temp_path /var/snap/mastodon/current/nginx/client_body_temp;
    proxy_temp_path /var/snap/mastodon/current/nginx/proxy_temp;
    fastcgi_temp_path /var/snap/mastodon/current/nginx/fastcgi_temp;
    uwsgi_temp_path /var/snap/mastodon/current/nginx/puwsgi_temp;
    scgi_temp_path /var/snap/mastodon/current/nginx/scgi_temp;

    server {
        listen unix:/var/snap/mastodon/common/web.socket;
        set_real_ip_from unix:;
        server_name localhost;

        keepalive_timeout 70;
        sendfile on;
        client_max_body_size 80m;

        root /snap/mastodon/current/ruby/mastodon/public;

        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml image/x-icon;

        location / {
            try_files $uri @proxy;
        }

        # If Docker is used for deployment and Rails serves static files,
        # then needed must replace line `try_files $uri =404;` with `try_files $uri @proxy;`.
        location = /sw.js {
            add_header Cache-Control "public, max-age=604800, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/assets/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/avatars/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/emoji/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/headers/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/packs/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/shortcuts/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/sounds/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/system/ {
            add_header Cache-Control "public, max-age=2419200, immutable";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ^~ /api/v1/streaming {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Proxy "";

            proxy_pass http://streaming;
            proxy_buffering off;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";

            tcp_nodelay on;
        }

        location @proxy {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Proxy "";
            proxy_pass_header Server;

            proxy_pass http://backend;
            proxy_buffering on;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_cache CACHE;
            proxy_cache_valid 200 7d;
            proxy_cache_valid 410 24h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cached $upstream_cache_status;

            tcp_nodelay on;
        }

        error_page 404 500 501 502 503 504 /500.html;
    }
}
